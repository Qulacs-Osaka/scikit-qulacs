Traceback (most recent call last):
  File "/home/runner/work/scikit-qulacs/scikit-qulacs/.venv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/runner/work/scikit-qulacs/scikit-qulacs/.venv/lib/python3.9/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/work/scikit-qulacs/scikit-qulacs/.venv/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/runner/work/scikit-qulacs/scikit-qulacs/.venv/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.9/x64/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/runner/work/scikit-qulacs/scikit-qulacs/.venv/lib/python3.9/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/scikit-qulacs/scikit-qulacs/.venv/lib/python3.9/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/runner/work/scikit-qulacs/scikit-qulacs/.venv/lib/python3.9/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from skqulacs.circuit.pre_defined import create_qcl_ansatz
from skqulacs.qnn import QNNClassifier

nqubit = 5                      # qubitの数。必要とする入力、出力の次元数以上が必要である。
c_depth = 3                     # circuitの深さ。ニューラルネットワークでの隠れ層に対応する。
time_step = 1.                  # qcl_ansatz に必要となるパラメータ。横磁場イジングモデルによって発展させる時間を決める。
num_class = 3                   # 分類数（ここでは3つの品種に分類）
solver="BFGS"                   # アルゴリズム。ほかには、"Adam" が使える。
maxiter = 20                    # ループの最大。これが多いほど、正確になるが、時間がかかる。
circuit = create_qcl_ansatz(nqubit, c_depth, time_step)     # LearningCircuitを作る
qcl = QNNClassifier(circuit, num_class, solver)     # モデル構築を行う
opt_loss, opt_params = qcl.fit(x_train, y_train, maxiter)                          # 学習
print("trained parameters", opt_params)
print("loss", opt_loss)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m/tmp/ipykernel_1762/2652384445.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m [0;32mfrom[0m [0mskqulacs[0m[0;34m.[0m[0mcircuit[0m[0;34m.[0m[0mpre_defined[0m [0;32mimport[0m [0mcreate_qcl_ansatz[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      2[0m [0;32mfrom[0m [0mskqulacs[0m[0;34m.[0m[0mqnn[0m [0;32mimport[0m [0mQNNClassifier[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m [0;34m[0m[0m
[1;32m      4[0m [0mnqubit[0m [0;34m=[0m [0;36m5[0m                      [0;31m# qubitの数。必要とする入力、出力の次元数以上が必要である。[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0mc_depth[0m [0;34m=[0m [0;36m3[0m                     [0;31m# circuitの深さ。ニューラルネットワークでの隠れ層に対応する。[0m[0;34m[0m[0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'skqulacs'
ModuleNotFoundError: No module named 'skqulacs'

